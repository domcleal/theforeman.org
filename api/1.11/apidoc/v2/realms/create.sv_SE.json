{"docs":{"name":"Foreman","info":"\n\u003cp\u003eForeman API v2 is currently the default API version.\u003c/p\u003e\n","copyright":"","doc_url":"../../../apidoc/v2","api_url":"/api","resources":[{"doc_url":"../../../apidoc/v2/realms","api_url":"/api","name":"Realms","short_description":null,"full_description":null,"version":"v2","formats":null,"metadata":null,"methods":[{"doc_url":"../../../apidoc/v2/realms/create","name":"create","apis":[{"api_url":"/api/realms","http_method":"POST","short_description":"Create a realm","deprecated":null}],"formats":null,"full_description":"\n\u003cp\u003eThe \u003cb\u003ename\u003c/b\u003e field is used for the name of the realm.\u003c/p\u003e\n","errors":[],"params":[{"name":"realm","full_name":"realm","description":"","required":true,"allow_nil":false,"validator":"Must be a Hash","expected_type":"hash","metadata":null,"show":true,"validations":[],"params":[{"name":"name","full_name":"realm[name]","description":"\n\u003cp\u003eThe realm name, e.g. EXAMPLE.COM\u003c/p\u003e\n","required":true,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"realm_proxy_id","full_name":"realm[realm_proxy_id]","description":"\n\u003cp\u003eProxy to use for this realm\u003c/p\u003e\n","required":true,"allow_nil":true,"validator":"Must be a number.","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"realm_type","full_name":"realm[realm_type]","description":"\n\u003cp\u003eRealm type, e.g. FreeIPA or Active Directory\u003c/p\u003e\n","required":true,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"location_ids","full_name":"realm[location_ids]","description":"\n\u003cp\u003eREPLACE locations with given ids\u003c/p\u003e\n","required":false,"allow_nil":true,"validator":"Must be an array of any type","expected_type":"array","metadata":null,"show":true,"validations":[]},{"name":"organization_ids","full_name":"realm[organization_ids]","description":"\n\u003cp\u003eREPLACE organizations with given ids.\u003c/p\u003e\n","required":false,"allow_nil":true,"validator":"Must be an array of any type","expected_type":"array","metadata":null,"show":true,"validations":[]}]}],"examples":["POST /api/realms\n{\n  \"realm\": {\n    \"name\": \"\"\n  }\n}\n422\n{\n  \"error\": {\n    \"id\": null,\n    \"errors\": {\n      \"name\": [\n        \"can't be blank\"\n      ],\n      \"realm_type\": [\n        \"can't be blank\",\n        \"is not included in the list\"\n      ],\n      \"realm_proxy_id\": [\n        \"can't be blank\"\n      ]\n    },\n    \"full_messages\": [\n      \"Name can't be blank\",\n      \"Realm type can't be blank\",\n      \"Realm type is not included in the list\",\n      \"Realm proxy can't be blank\"\n    ]\n  }\n}"],"metadata":null,"see":[],"headers":[],"show":true}],"headers":null}],"link_extension":".sv_SE.html"}}